#BlueJ class context
comment0.target=LoopFun
comment1.params=number
comment1.target=java.lang.Integer\ factorial(java.lang.Integer)
comment1.text=\n\ Given\ a\ number,\ return\ the\ factorial\ of\ that\ number.\n\ For\ example,\ given\ 5,\ the\ factorial\ is\ 5\ x\ 4\ x\ 3\ x\ 2\ x\ 1\ which\ should\ return\ 120.\n\ @param\ number\n\ @return\ the\ factorial\ of\ the\ number\n
comment2.params=phrase
comment2.target=java.lang.String\ acronym(java.lang.String)
comment2.text=\n\ Given\ a\ phrase,\ get\ the\ acronym\ of\ that\ phrase.\ Acronym\ is\ the\ combination\ of\n\ the\ first\ character\ of\ each\ word\ in\ upper\ case.\n\ For\ example,\ given\ "Ruby\ on\ Rails",\ this\ method\ will\ return\ "ROR"\n\ @param\ phrase\n\ @return\ Upper\ case\ string\ of\ the\ first\ letter\ of\ each\ word\n
comment3.params=word
comment3.target=java.lang.String\ encrypt(java.lang.String)
comment3.text=\n\ To\ prevent\ anyone\ from\ reading\ our\ messages,\ we\ can\ encrypt\ it\ so\ it\ will\ only\ be\ readable\ by\ its\n\ intended\ audience.\ This\ method\ encrypt\ the\ message\ by\ shifting\ the\ letter\ by\ 3\ characters.\ If\ the\ character\ is\n\ at\ the\ end\ of\ the\ alphabet,\ it\ will\ wraps\ around.\n\ For\ example\:\n\ \ 'a'\ \=>\ 'd'\n\ \ 'w'\ \=>\ 'z'\n\ \ 'x'\ \=>\ 'a'\n\ \ 'y'\ \=>\ 'b'\n\ @param\ word\n\ @return\ the\ encrypted\ string\ by\ shifting\ each\ character\ by\ three\ character\n
numComments=4
